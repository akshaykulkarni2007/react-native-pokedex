// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders common components correctly renders Button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderRadius": 10,
        "justifyContent": "center",
        "padding": 10,
        "textAlign": "center",
      },
      {
        "backgroundColor": "#FFF",
        "borderColor": "#2e3156",
        "borderWidth": 1,
      },
      undefined,
    ]
  }
  testID="button-primary"
>
  <Text
    style={
      [
        {
          "fontSize": 20,
        },
        {
          "color": "#2e3156",
        },
      ]
    }
  >
    Text
  </Text>
</View>
`;

exports[`renders common components correctly renders Checkbox correctly 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "marginBottom": 20,
    }
  }
>
  <View
    accessibilityRole="checkbox"
    accessibilityState={
      {
        "checked": false,
        "disabled": false,
      }
    }
    accessibilityValue={
      {
        "text": "off",
      }
    }
    accessible={true}
    pointerEvents="auto"
    testID="checkbox-label"
  >
    <RNCCheckbox
      forwardedRef={null}
      onValueChange={[Function]}
      style={
        [
          {
            "backgroundColor": "transparent",
            "height": 32,
            "width": 32,
          },
          {
            "alignSelf": "center",
          },
        ]
      }
      value={false}
    />
  </View>
  <Text
    style={
      {
        "flexGrow": 1,
        "margin": 8,
      }
    }
  >
    label
  </Text>
</View>
`;

exports[`renders common components correctly renders ErrorComponent correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
      "textAlign": "center",
    }
  }
>
  <Text
    style={
      {
        "color": "#2e3156",
        "fontSize": 20,
        "marginBottom": 20,
      }
    }
  >
    test
  </Text>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      [
        {
          "alignItems": "center",
          "borderRadius": 10,
          "justifyContent": "center",
          "padding": 10,
          "textAlign": "center",
        },
        {
          "backgroundColor": "#FFF",
          "borderColor": "#2e3156",
          "borderWidth": 1,
        },
        undefined,
      ]
    }
    testID="button-primary"
  >
    <Text
      style={
        [
          {
            "fontSize": 20,
          },
          {
            "color": "#2e3156",
          },
        ]
      }
    >
      Go to Home
    </Text>
  </View>
</View>
`;

exports[`renders common components correctly renders Spinner correctly 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <ActivityIndicator
    color="#CCC"
    size="large"
    testID="spinner"
  />
</View>
`;
